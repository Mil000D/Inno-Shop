// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementService.DAL.Context;

#nullable disable

namespace UserManagementService.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20250112011225_AddedExamplaryUsersToDb")]
    partial class AddedExamplaryUsersToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserManagementService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountVerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            IsActive = true,
                            IsVerified = true,
                            Name = "Admin",
                            PasswordHash = "$2a$11$kzHkzDTWXpjO5w7m1NyNnOStn6JVrVIRC6pJy1GVH6j0M3ibmeESS",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@user.com",
                            IsActive = true,
                            IsVerified = true,
                            Name = "User",
                            PasswordHash = "$2a$11$cMaEsjBmPxovlaf552I/F.KCoBgsbECyHXDyV73RRMaLANBEWGoZ6",
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
